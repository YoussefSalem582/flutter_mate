// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// SECURITY BEST PRACTICES:
///
/// For LOCAL DEVELOPMENT:
/// 1. Copy .env.example to .env
/// 2. Fill in your actual API keys in .env
/// 3. The .env file is gitignored and won't be committed
/// 4. Keys are hardcoded below as fallback (safe for public repo)
///
/// For PRODUCTION BUILDS:
/// Use --dart-define to inject keys at build time:
/// flutter build web --dart-define=FIREBASE_API_KEY_WEB=your_key
/// flutter build apk --dart-define=FIREBASE_API_KEY_ANDROID=your_key
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Web configuration - Development mode (hardcoded for local development)
  // For production, use: flutter build web --dart-define=FIREBASE_API_KEY_WEB=your_actual_key
  static FirebaseOptions get web {
    // Try to get from environment first (for production builds)
    const envApiKey = String.fromEnvironment('FIREBASE_API_KEY_WEB');
    const envMeasurementId =
        String.fromEnvironment('FIREBASE_MEASUREMENT_ID_WEB');

    // Use environment variables if provided, otherwise use development defaults
    return FirebaseOptions(
      apiKey: envApiKey.isNotEmpty
          ? envApiKey
          : 'AIzaSyCPCEK_KS_3mYqVWWQvBW1QuaturMYvv68', // Web API key
      appId: '1:320880192368:web:3c9d8e1cd3eff3ef5efdb5',
      messagingSenderId: '320880192368',
      projectId: 'fir-3840b',
      authDomain: 'fir-3840b.firebaseapp.com',
      storageBucket: 'fir-3840b.firebasestorage.app',
      measurementId: envMeasurementId.isNotEmpty
          ? envMeasurementId
          : 'G-2Q4VS3VC1R', // Web measurement ID
    );
  }

  // Android configuration - Development mode (hardcoded for local development)
  // For production, use: flutter build apk --dart-define=FIREBASE_API_KEY_ANDROID=your_actual_key
  static FirebaseOptions get android {
    // Try to get from environment first (for production builds)
    const envApiKey = String.fromEnvironment('FIREBASE_API_KEY_ANDROID');

    // Use environment variables if provided, otherwise use development defaults
    return FirebaseOptions(
      apiKey: envApiKey.isNotEmpty
          ? envApiKey
          : 'AIzaSyCfwUtmBwVxaJZbJLOsc3X2w3JWc50oDyg', // Android API key
      appId: '1:320880192368:android:54d1937257d7ec255efdb5',
      messagingSenderId: '320880192368',
      projectId: 'fir-3840b',
      storageBucket: 'fir-3840b.firebasestorage.app',
    );
  }

  // iOS configuration - ALL KEYS TOKENIZED
  // Must provide at build time: --dart-define=FIREBASE_API_KEY_IOS=your_actual_key
  static FirebaseOptions get ios {
    return const FirebaseOptions(
      apiKey: String.fromEnvironment(
        'FIREBASE_API_KEY_IOS',
        defaultValue: 'REPLACE_WITH_YOUR_IOS_API_KEY',
      ),
      appId: String.fromEnvironment(
        'FIREBASE_APP_ID_IOS',
        defaultValue: '1:320880192368:ios:REPLACE_WITH_YOUR_IOS_APP_ID',
      ),
      messagingSenderId: '320880192368',
      projectId: 'fir-3840b',
      storageBucket: 'fir-3840b.firebasestorage.app',
      iosBundleId: 'com.example.flutterMate',
    );
  }

  static FirebaseOptions get macos => ios;
}
